# python.deploy
#
# Deploy Python package to PyPI and optionally to a Docker registry.
#

parameters:
  dockerDeploy: true
  dockerDeployFile: "Dockerfile"
  dockerRegistryConnector: "tomtom-docker-registry-bintray"
  dockerRepo: "python"
  gitCiToken: ""
  gitCiUserMail: ""
  gitCiUserName: ""
  pypiConnector: "testpypi-tomtom-dev"
  pythonUseVersion: "3.6"

steps:
- checkout: self
  # Allow scripts to access the system token so that the pipeline can push git changes (eg. version bump)
  persistCredentials: true

- script: |
    git config --global user.email "${{ parameters.gitCiUserMail }}"
    git config --global user.name "${{ parameters.gitCiUserName }}"
  displayName: "Configure git"

# Checkout branch since by default Azure Pipelines do checkouts of specific commits (detached HEAD)
# and we need to be at master to be able to push version bump changes.
# We need to use a powershell script here to extract the proper branch name by removing 'refs/heads/' from the BUILD_SOURCEBRANCH variable
# (eg. 'refs/heads/feature/feat-a' becomes 'feature/feat-a').
- powershell: write-host "##vso[task.setvariable variable=branch]$($env:BUILD_SOURCEBRANCH.substring($env:BUILD_SOURCEBRANCH.indexOf('/', 5) + 1))"
  displayName: "Extract the branch name"

- script: git checkout $(branch)
  displayName: "Checkout branch"

- script: |
    VERSION=$(python setup.py --version)
    NAME=$(python setup.py --name)
    echo "##vso[task.setvariable variable=moduleVersion]${VERSION}"
    echo "##vso[task.setvariable variable=moduleName]${NAME}"
  displayName: "Obtain Python module version and name"

- template: python.package.yml
  parameters:
    pythonUseVersion: ${{ parameters.pythonUseVersion }}
    image: ${{ NAME }}
    imageVersion: ${{ VERSION }}
    dockerDeploy: ${{ parameters.dockerDeploy }}
    dockerRepo: ${{ parameters.dockerRepo }}
    dockerDeployFile: ${{ parameters.dockerDeployFile }}

- template: python.release.yml
  condition: eq(variables['release'], 'true')
  parameters:
    gitCiToken: ${{ parameters.gitCiToken }}
    pypiConnector: ${{ parameters.pypiconnector }}

# Parameters cannot be used in conditions and therefore we need to convert them first to variables.
# See https://github.com/microsoft/azure-pipelines-yaml/issues/64.
- script: |
    echo "##vso[task.setvariable variable=dockerDeploy]${{ parameters.dockerDeploy }}"

- template: docker.release.yml
  condition: and(or(eq(variables['release'], 'true'), eq(variables['dockerSnapshot'], 'true')), eq(variables['dockerDeploy'], 'true'))
  parameters:
    image: ${{ NAME }}
    version: ${{ VERSION }}
    dockerRegistryConnector: ${{ parameters.dockerRegistryConnector }}
    dockerDeploy: ${{ parameters.dockerDeploy }}
    dockerRepo: ${{ parameters.dockerRepo }}
    dockerDeployFile: ${{ parameters.dockerDeployFile }}
